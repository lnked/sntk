
// __app.js

;( function( $ ) {
	"use strict";

	window.body = $('body');
	window._this = null;

	$.app = {
		
		initSandwich: function()
		{
			this.sandwich.init({
				keyHooks: !0,
				selector: '.js-sandwich-menu',
				wrapper: '.layout-wrapper',
				overlay: '#menu-overlay'
			});
		},

		initSelect: function()
		{
			$('select').selectbox();
		},

		initMask: function()
		{
			$(".js-date-watcher").mask("99/99/9999");
			$(".js-phone-watcher").mask("+ 7 (999) 999-99-99");
			$(".js-cartnumber-watcher").mask("999-999-999");
		},

		initPopup: function()
		{
			$.popup.init('.js-open-popup', {
				cssPosition: false,
				wrapper: '.layout-wrapper'
			});
		},
		
		initMagnific: function()
		{ 
			$('.zoom').magnificPopup({
				type:'image',
				preloader: true,
				gallery: {
					enabled: true
				},
				zoom: {
					enabled: true,
					duration: 300,
					easing: 'ease-in-out',
					opener: function(openerElement) {
						return openerElement.is('img') ? openerElement : openerElement.find('img');
					}
				}
			 });
		},

		slickCarousel: function()
		{
			if ($('.js-carousel').length && $('.js-carousel').find('.slick-slide').length)
			{
				var count = 4, classname = 'carousel';

				$('.js-carousel').each(function(){
					count = 4;
					classname = 'carousel';

					if ($(this).data('viewcount'))
					{
						count = parseInt($(this).data('viewcount'));
					}

					if ($(this).data('classname'))
					{
						classname = $(this).data('classname');
					}

					$(this).slick({
						infinite: true,
						dots: false,
						draggable: true,
						speed: 170,
						slidesToShow: count,
						slidesToScroll: 1,
						prevArrow: '<button type="button" class="'+classname+'__navigation '+classname+'__navigation_prev slick-prev"></button>',
						nextArrow: '<button type="button" class="'+classname+'__navigation '+classname+'__navigation_next slick-next"></button>',
						responsive: [
							{
								breakpoint: 1024,
								settings: {
									slidesToShow: 3,
									slidesToScroll: 3,
									infinite: true,
									dots: true
								}
							},
							{
								breakpoint: 600,
								settings: {
									slidesToShow: 2,
									slidesToScroll: 2
								}
							},
							{
								breakpoint: 480,
								settings: {
									slidesToShow: 1,
									slidesToScroll: 1
								}
							}
						]
					});
				});
			}
		},

		slickSider: function()
		{
			if ($('#slider').length > 0 && $('#slider').find('.slider__item').length > 1)
			{
				$('#slider').slick({
					infinite: true,
					dots: true,
					draggable: false,
					speed: 300,
					fade: true,
					autoplay: true,
					autoplaySpeed: 4500,
					pauseOnHover: false,
					cssEase: 'ease',
					prevArrow: '<button type="button" class="slider__navigation slider__navigation_prev slick-prev"></button>',
					nextArrow: '<button type="button" class="slider__navigation slider__navigation_next slick-next"></button>'
				});
			}
		},

		toggle: function()
		{
			var selector, block, target, button;

			$('.js-toggle-trigger').each(function(){
				if ($($(this).data('toggle')).length)
				{
					selector = $(this).data('toggle');
					button = $(this);
					block = $(selector);

					body.on('click', function(e){
						target = $(e.target);

						if (!target.closest(selector).length && !target.closest('.js-toggle-trigger').length && block.hasClass('active'))
						{
							button.removeClass('animate');
							block.removeClass('transform');

							setTimeout(function(){
								block.removeClass('active');
							}, 135);
						}
					});		
				}
			});

			body.on('click', '.js-toggle-trigger', function(e){
				e.preventDefault();

				if ($(this).data('toggle'))
				{
					block = $($(this).data('toggle'));
					button = $(this);

					if (block.length)
					{
						if (!block.hasClass('active'))
						{
							button.addClass('animate');
							block.addClass('active');

							setTimeout(function(){
								block.addClass('transform');
							}, 5);
						}
						else
						{
							button.removeClass('animate');
							block.removeClass('transform');

							setTimeout(function(){
								block.removeClass('active');
							}, 135);
						}
					}
					
				}

			});
		},
		
		hashJump: function()
		{
			if (window.location.hash)
			{
				var hash = window.location.hash.substr(1), jumpto = null;
				
				if ($('a[name="' +hash+ '"]').length)
				{
					jumpto = $('a[name="' +hash+ '"]').eq(0);
				}
				
				if ($('#' +hash).length)
				{
					jumpto = $('#' +hash).eq(0);
				}

				if (jumpto !== null)
				{
					$('html, body').stop().animate({ scrollTop: jumpto.offset().top }, 'fast');
				}
			}
		},

		updateImage: function()
		{
			body.on('click', '.js-update-image', function(e){
				e.preventDefault();
				$(this).find('img').attr('src', $(this).find('img').attr('src').split('?')[0] + '?u=' + Math.random());
			});
		},

		zoomit: function()
		{
			var wrapper, holder, image;

			body.on('click', '.js-zoom-image', function(e){
				
				e.preventDefault();

				image = $(this).attr('href');

				if ($(this).closest('.js-zoom-wrapper').length)
				{
					wrapper = $(this).closest('.js-zoom-wrapper');
					
					if (wrapper.find('.js-zoom-holder').length)
					{
						holder = wrapper.find('.js-zoom-holder');

						holder.html('');

						wrapper.find('.current').removeClass('current');


						holder.html('<img src="' + image + '" alt="">');

						$(this).addClass('current');
					}
				}

				return !1;
			});
		},

		hoverBind: function()
		{
			body.on('mouseenter', '.js-bind-hover', function(){
				$(this).addClass('hover');
			});

			body.on('mouseleave', '.js-bind-hover', function(){
				$(this).removeClass('hover');
			});
		},

		toggleClass: function()
		{
			body.on('click', '.js-toggle-class', function(e){
				var wrapper = $(this).closest('.js-toggle-wrapper');

				if (!$(this).hasClass('current'))
				{
					wrapper.find('.current').removeClass('current');
					$(this).addClass('current');
				}
			});
		},

		initViewer: function()
		{
			body.on('click', '.js-viewer-trigger', function(e){
				e.preventDefault();

				var viewer = $(this).closest('.js-viewer'),
					image = $(this).attr('href'),
					count = viewer.find('.js-viewer-count'),
					total = viewer.find('.js-viewer-total');

				viewer.find('.current').removeClass('current');
				viewer.find('.js-viewer-image').html('<img src="' + image + '" class="viewer__image__src" alt="">');

				$(this).addClass('current');
				
				return !1;
			});
		},

		init: function()
		{
			_this = this;

			this.slickCarousel();

			this.initPopup();

			this.initMask();
			this.initSelect();
			this.initSandwich();
			this.hoverBind();
			this.toggleClass();
			this.initViewer();
			this.initMagnific();

			// this.ajaxForm.init();
		}

	};

})( jQuery );


// _app.map.js

;(function ($) {
	"use strict";

	$.app = $.app = $.app || {};

	var map, _this;

	$.app.map = {
		
		google: function( mapid )
		{
			var map = new google.maps.Map(d.getElementById( 'map-conteiner-' + mapid ), {
				zoom: 14,
				zoomControl: !1,
				panControl: !1,
				scrollwheel: !1,
				navigationControl: !1,
				mapTypeControl: !1,
				scaleControl: !1,
				draggable: !0,
				disableDoubleClickZoom: !0,
				center: new google.maps.LatLng(45.053548,39.016056)
			});

			var mapOptions = {
				zoom: 17,
				zoomControl: !1,
				panControl: !1,
				scrollwheel: !1,
				navigationControl: !1,
				mapTypeControl: !1,
				scaleControl: !1,
				draggable: !0,
				disableDoubleClickZoom: !1,
				streetViewControl: !1,
				overviewMapControl: !1,
				center: new google.maps.LatLng(latitude, longitude)
			};

			var image = {
				url: '/images/marker@2x.png',
				size: new google.maps.Size(26, 32),
				origin: new google.maps.Point(0, 0),
				scaledSize: new google.maps.Size(26, 32),
				anchor: new google.maps.Point(26, 32)
			};

			var map = new google.maps.Map($(container), mapOptions);

			var marker = new google.maps.Marker({
			position: new google.maps.LatLng(latitude, longitude),
			map: map,
			icon: image,
			flat: true,
			title: 'г. Москва, Тессинский переулок, вл. 2-6, 19'
			});

			function toggleBounce()
			{
			if (marker.getAnimation() !== null) {
				marker.setAnimation(null);
			} else {
				marker.setAnimation(google.maps.Animation.BOUNCE);

				setTimeout(function(){
					marker.setAnimation(null);
				}, 2000);
			}
			}

			marker.addListener('click', toggleBounce);
		},

		yandex: function(data)
		{
			map = {
				ymap: null,

				draw: function()
				{
					this.ymap = new ymaps.Map(data.container, {
						center: [data.latitude, data.longitude],
						zoom: 14
					}, {
						searchControlProvider: 'yandex#map'
					});
				},

				controls: function()
				{
					// this.ymap.link.controls
					//     .add('smallZoomControl', { right: 10, top: 15 })
					//     .add(new ymaps.control.ScaleLine())
					//     .add('searchControl', { left: 20, top: 20 });
				},

				placemark: function()
				{
					// var GeoObject = new ymaps.GeoObject({
					// 	// Описание геометрии.
					// 	geometry: {
					// 		type: "Point",
					// 		coordinates: [data.latitude, data.longitude]
					// 	},
					// 	// Свойства.
					// 	properties: {
					// 		// Контент метки.
					// 		iconContent: 'Я тащусь',
					// 		hintContent: 'Ну давай уже тащи'
					// 	}
					// }, {
					// 	// Опции.
					// 	// Иконка метки будет растягиваться под размер ее содержимого.
					// 	preset: 'islands#blackStretchyIcon',
					// 	// Метку можно перемещать.
					// 	draggable: false
					// });

					this.ymap.geoObjects
						// .add(GeoObject)
						.add(new ymaps.Placemark([data.latitude, data.longitude], {
							balloonContent: 'цвет <strong>воды пляжа бонди</strong>'
						}, {
							preset: 'islands#icon',
							iconColor: '#0095b6'
						}))

					// this.ymap.link.geoObjects.add(
					// 	new ymaps.Placemark( [data.latitude, data.longitude], {}, {
			  //               iconImageHref: '/images/marker.png',
			  //               iconImageSize: [26, 32],
			  //               iconImageOffset: [-3, -42]
			  //           })
					// );
				},

				init: function()
				{
					this.draw();
					this.controls();
					this.placemark();
				}
			};

			ymaps.ready(function(){
				map.init();
			});
		},

		paste: function(data)
		{
			this[data.provider](data);
		},

		load: function()
		{
			_this = this;

			if (body.find('.js-load-map').length)
			{
				body.find('.js-load-map').each(function() {
					console.log($(this));
					if ($(this).data('latitude') && $(this).data('longitude') && $(this).data('provider') && $(this).data('container'))
					{
						_this.paste({
							container	: $(this).data('container'),
							provider 	: $(this).data('provider'),
							latitude	: $(this).data('latitude'),
							longitude	: $(this).data('longitude')
						});
					}
				});
			}
		}
	};

	// window.initialize = $.app.map.load;

	$.app.map.load();

})(jQuery);


// _app.sandwich.js

;(function ($) {
	"use strict";

	$.app = $.app = $.app || {};

	var _this;

	$.app.sandwich = {

		config: {
			keyHooks: !1,
			selector: '.js-sandwich-menu',
			wrapper: '.layout-wrapper',
			overlay: '.overlay'
		},

		extend: function(config)
		{
			_this = this;

			if (typeof config !== 'undefined')
			{
				var x;
				for (x in config)
				{
					if (typeof _this.config[x] !== 'undefined')
						_this.config[x] = config[x];
				}
			}
		},

		isOpen: function()
		{
			return body.hasClass('page-visible');
		},

		hide: function()
		{
			body.removeClass('page-open');

			setTimeout(function(){
				body.removeClass('page-visible');
			}, 10);

			$(this.config.overlay).css({
				'visibility': 'hidden'
			});
		},

		toggle: function()
		{
			if (body.hasClass('page-visible'))
			{
				setTimeout(function(){
					body.removeClass('page-visible');
				}, 10);
			}
			else
			{
				setTimeout(function(){
					body.addClass('page-visible');
				}, 10);
			}

			body.toggleClass('page-open');

			var visibility = 'visible';

			if (!body.hasClass('page-open'))
			{
				visibility = 'hidden'
			}
			
			$(_this.config.overlay).css({
				'visibility': visibility
			});
		},

		sandwichTrigger: function()
		{
			_this = this;

			if (_this.config.keyHooks)
			{
				body.on('keydown', function(e) {
					if(e.keyCode == 27 && _this.isOpen())
					{
						_this.toggle();
					}
				});
			};

			body.on('click', _this.config.selector, function(e){
				e.preventDefault ? e.preventDefault() : e.returnValue = false;
				_this.toggle();
			});
		},

		overlayTrigger: function()
		{
			_this = this;

			body.on('click', _this.config.overlay, function(e){
				_this.hide();
			});
		},

		init: function(config)
		{
			this.extend(config);
			
			this.sandwichTrigger();
			this.overlayTrigger();
		}

	};

})(jQuery);


// _fns.js

var tools = {
    isString: function (obj) {
        return typeof obj === 'string';
    },
    isObject: function (obj) {
        return typeof obj === 'object';
    },
    isNumber: function (obj) {
        return typeof obj === 'number';
    },
    isUndefined: function (value) {
        return typeof value === 'undefined';
    },
    isDefined: function (value) {
        return typeof value !== 'undefined';
    }
};

function on(elm, events, handler) {
   if (elm) {
       events.split(' ').forEach(function (event) {
           elm.addEventListener(event, handler);
       });
   }
}

function is_null(x)
{
	return x == null;
}

function is_undefined(x)
{
	return typeof(x) == 'undefined';
}

function is_touch_device()
{
    return ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch || 'onmsgesturechange' in window);
}

function declOfNum(number, titles) {  
    cases = [2, 0, 1, 1, 1, 2];  
    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  
}
// declOfNum(count, ['найдена', 'найдено', 'найдены']);

var shuffle = function( array ) {
	return array.sort( function() {
		return Math.random() - 0.5;
	} );
};

function updateCaptcha(captcha, ev)
{
    ev.preventDefault();

    if ($(captcha).length)
    {
        $(captcha).attr('src', $(captcha).attr('src').split( '?' )[0] + '?v=' + Math.random());
    }

    return !1;
}

// Возвращает функцию, которая не будет срабатывать, пока продолжает вызываться.
// Она сработает только один раз через N миллисекунд после последнего вызова.
// Если ей передан аргумент `immediate`, то она будет вызвана один раз сразу после
// первого запуска.
function debounce(func, wait, immediate) {
    var timeout;
    return function() {
        var context = this, args = arguments;
        var later = function() {
            timeout = null;
            if (!immediate) func.apply(context, args);
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
    };
};

// Использование
// var myEfficientFn = debounce(function() {
// All the taxing stuff you do
// }, 250);
// window.addEventListener('resize', myEfficientFn);


function once(fn, context) { 
    var result;

    return function() { 
        if(fn) {
            result = fn.apply(context || this, arguments);
            fn = null;
        }

        return result;
    };
}

// // Пример использования
// var canOnlyFireOnce = once(function() {
//     console.log('Запущено!');
// });

// canOnlyFireOnce(); // "Запущено!"
// canOnlyFireOnce(); // Не запущено


var getAbsoluteUrl = (function() {
    var a;

    return function(url) {
        if(!a) a = document.createElement('a');
        a.href = url;

        return a.href;
    };
})();

// Пример использования
// getAbsoluteUrl('/something');


/**
 * @param {string} s1 Исходная строка
 * @param {string} s2 Сравниваемая строка
 * @param {object} [costs] Веса операций { [replace], [replaceCase], [insert], [remove] }
 * @return {number} Расстояние Левенштейна
 */
function levenshtein(s1, s2, costs) {
    var i, j, l1, l2, flip, ch, chl, ii, ii2, cost, cutHalf;
    l1 = s1.length;
    l2 = s2.length;

    costs = costs || {};
    var cr = costs.replace || 1;
    var cri = costs.replaceCase || costs.replace || 1;
    var ci = costs.insert || 1;
    var cd = costs.remove || 1;

    cutHalf = flip = Math.max(l1, l2);

    var minCost = Math.min(cd, ci, cr);
    var minD = Math.max(minCost, (l1 - l2) * cd);
    var minI = Math.max(minCost, (l2 - l1) * ci);
    var buf = new Array((cutHalf * 2) - 1);

    for (i = 0; i <= l2; ++i) {
        buf[i] = i * minD;
    }

    for (i = 0; i < l1; ++i, flip = cutHalf - flip) {
        ch = s1[i];
        chl = ch.toLowerCase();

        buf[flip] = (i + 1) * minI;

        ii = flip;
        ii2 = cutHalf - flip;

        for (j = 0; j < l2; ++j, ++ii, ++ii2) {
            cost = (ch === s2[j] ? 0 : (chl === s2[j].toLowerCase()) ? cri : cr);
            buf[ii + 1] = Math.min(buf[ii2 + 1] + cd, buf[ii] + ci, buf[ii2] + cost);
        }
    }
    return buf[l2 + cutHalf - flip];
}
	
// function doOnOrientationChange()
// {
// 	switch(window.orientation) 
// 	{  
// 		case -90:
// 		case 90:
// 		alert('landscape');
// 		break; 
// 		default:
// 		alert('portrait');
// 		break; 
// 	}
// }

// window.addEventListener('orientationchange', doOnOrientationChange);

// doOnOrientationChange();


// Smoothly Scroll to page anchors
// var jump = function (e) {
// // Stop the "hard" jump.
// e.preventDefault();
// //Get the target
// var target = $(this).attr("href");
// // Use animated scrolling.  The .stop() prevents scroll queue.
// $('html,body').stop().animate({
//   // Find top-position of target-element and set it as scroll target.
//   scrollTop: $(target).offset().top
//   // Animation Delay:
//   }, 500, function () {
//     // Attach the hash (#jumptarget) to the page url.
//     location.hash = target;
//   });
// }

// // Instantiate this as follows in your document.ready();
// //$(document).ready(function () {
// //$('a[href*=#]').bind("click", jump);
// //return false;
// //});


// _google-map.js

function googleMap()
{
	var arr = {
		'moscow': {
			city: 'г. Москва',
			title: 'Москва',
			street: 'Верхняя Масловка, д. 20, стр. 1.',
			phone: '(495) 645-83-54',
			email: 'info@itsntk.ru',
			coords: [ 55.795316,37.562272 ]
		},
		'krasnodar': {
			city: 'г. Краснодар',
			title: 'Краснодар',
			street: 'ул. Дальняя, 39/3',
			phone: '(861) 278-98-34',
			email: 'info@itsntk.ru',
			coords: [ 45.060932,38.964575 ]
		}
	};

	var mapOptions = {
		zoom: 13,
		zoomControl: !0,
		zoomControlOptions: {
			style: google.maps.ZoomControlStyle.LARGE,
			position: google.maps.ControlPosition.LEFT_TOP
		},
		panControl: !1,
		panControlOptions: {
			position: google.maps.ControlPosition.LEFT_TOP
		},
		scrollwheel: !1,
		navigationControl: !1,
		mapTypeControl: !1,
		scaleControl: !0,
		draggable: !0,
		disableDoubleClickZoom: !1,
		center: new google.maps.LatLng(arr.krasnodar.coords[0], arr.krasnodar.coords[1])
	};

	var map = new google.maps.Map(document.getElementById('map-conteiner'), mapOptions);

	function addMarker( ar, map )
	{
		var contentString = [
			'<div class="map-content">',
				'<h2 class="firstHeading">'+ ar['title'] + '</h2>',
				'<div class="map-bodyContent">',
					'<p>' + ar['city'] + '</p>',
					'<p>' + ar['street'] + '</p>',
					'<p><span>Телефон:</span>' + ar['phone'] + '</p>',
					'<p><span>Email:</span>' + ar['email'] + '</p>',
				'</div>',
			'</div>'
		].join('');

		var infowindow = new google.maps.InfoWindow({
			content: contentString,
			disableAutoPan: true,
			maxWidth: 500
		});

		var image = {
			url: './images/map-marker.png',
			size: new google.maps.Size(18, 25),
			origin: new google.maps.Point(0, 0),
			scaledSize: new google.maps.Size(18, 25),
			anchor: new google.maps.Point(18, 25)
		};

		var marker = new google.maps.Marker({
			position: new google.maps.LatLng( ar['coords'][0], ar['coords'][1] ),
			map: map,
			icon: image,
			flat: true,
			title: ar['title']
		});

		google.maps.event.addListener(marker, 'click', function() {
			if(infowindow)
			{
				infowindow.close();
			}

			infowindow.open(map, marker);
		});
	}
	
	for (var i in arr)
	{
		addMarker(arr[i], map);
	}

	$('body').on('click', '.js-toggle-class', function(e){
		var wrapper = $(this).closest('.js-toggle-wrapper'), city = '';

		if ($(this).data('city'))
		{
			city = $(this).data('city');
			map.setZoom(13);
			map.setCenter({lat: arr[city].coords[0], lng: arr[city].coords[1] });
		}
	});
}


// init.js

$(window).load(function() {
	$.app.init();
});

//# sourceMappingURL=data:application/json;base64,
